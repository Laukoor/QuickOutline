<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ririv</groupId>
    <artifactId>pdf-contents-editor</artifactId>
    <version>1.0.0-SNAPSHOT</version>
<!--    <packaging>jar</packaging>-->

    <name>pdf-contents-editor</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>15</maven.compiler.release>
        <maven.compiler.source>15</maven.compiler.source>
        <maven.compiler.target>15</maven.compiler.target>
        <javafx.version>16</javafx.version>
        <javafx.plugin.version>0.0.6</javafx.plugin.version>
        <itext.version>7.1.15</itext.version>
        <main.class>pdf.content.editor/com.ririv.quickoutline.view.App</main.class>
    </properties>

    <dependencies>


        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>commons-io</groupId>-->
<!--            <artifactId>commons-io</artifactId>-->
<!--            <version>2.10.0</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>com.jfoenix</groupId>
            <artifactId>jfoenix</artifactId>
            <version>9.0.10</version>
        </dependency>

        <!--        junit5常用的工具包-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
        </dependency>


<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>itextpdf</artifactId>-->
<!--            <version>5.5.13.2</version>-->
<!--        </dependency>-->

<!--        https://kb.itextsupport.com/home/it7kb/installation-guidelines/installing-itext-7-for-java-->

<!--                 Adding all modules -->
<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>itext7-core</artifactId>-->
<!--            <version>${itext.version}</version>-->
<!--            <type>pom</type>-->
<!--        </dependency>-->

<!--        Adding only the modules you need-->
        <!-- always needed -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>kernel</artifactId>
            <version>${itext.version}</version>
        </dependency>
        <!-- always needed -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>io</artifactId>
            <version>${itext.version}</version>
        </dependency>
        <!-- always needed -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>layout</artifactId>
            <version>${itext.version}</version>
        </dependency>
        <!-- only needed for forms -->
<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>forms</artifactId>-->
<!--            <version>${itext.version}</version>-->
<!--        </dependency>-->
        <!-- only needed for PDF/A -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>pdfa</artifactId>
            <version>${itext.version}</version>
        </dependency>
        <!-- only needed for digital signatures -->
<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>sign</artifactId>-->
<!--            <version>${itext.version}</version>-->
<!--        </dependency>-->
        <!-- only needed for barcodes -->
<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>barcodes</artifactId>-->
<!--            <version>${itext.version}</version>-->
<!--        </dependency>-->
        <!-- only needed for Asian fonts -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>font-asian</artifactId>
            <version>${itext.version}</version>
        </dependency>
        <!-- only needed for hyphenation -->
<!--        <dependency>-->
<!--            <groupId>com.itextpdf</groupId>-->
<!--            <artifactId>hyph</artifactId>-->
<!--            <version>${itext.version}</version>-->
<!--        </dependency>-->



        

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.ririv.quickoutline.view.App</mainClass> <!-- 此处为主入口-->
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
<!--                    <compilerArgs>&#45;&#45;enable-preview</compilerArgs>-->
                    <!--                    <excludes>-->
<!--                        <exclude>/com/ririv/contents/pdfProcess/Itext5Process</exclude>-->
<!--                    </excludes>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.plugin.version}</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                    <jlinkImageName>pdf-contents-editor</jlinkImageName>
<!--                    <jlinkZipName>pdf-contents-editor</jlinkZipName>-->
                    <launcher>launcher</launcher>

                    <options>
<!--                        https://stackoverflow.com/questions/61090444/how-to-config-enable-preview-when-using-javafxjlink-in-javafx-maven-plugin-->
<!--                        <option>&#45;&#45;enable-preview</option>-->

                        <option>--add-opens</option>
                        <option>java.base/java.lang.reflect=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>java.base/java.lang.reflect=com.jfoenix</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/javafx.css=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.runtime=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.binding=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>
                        <option>--add-opens</option>
                        <option>javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED</option>
                        <option>--add-exports</option>
                        <option>javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.controls/com.sun.javafx.scene.control=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.binding=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.graphics/com.sun.javafx.stage=com.jfoenix</option>
                        <option>--add-exports</option>
                        <option>javafx.base/com.sun.javafx.event=com.jfoenix</option>
                    </options>

                </configuration>
            </plugin>
        </plugins>
    </build>


</project>